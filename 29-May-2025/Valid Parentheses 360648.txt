# Problem: Valid Parentheses - https://leetcode.com/problems/valid-parentheses

class Solution {
    public boolean isValid(String s) {
        // Stack <Character> characters = new Stack <> ();

        //     for (int i = 0; i<s.length(); i++) {
        //         if (characters.isEmpty() && (s.charAt(i) == '}' || s.charAt(i) == ')' || s.charAt(i) == ']')) {
        //             return false;
        //         }
        //         if (s.charAt(i) == ')' && !s.isEmpty() && characters.peek() == '(') {
        //             characters.pop();
        //         }
        //         else if (s.charAt(i) == ']' && !s.isEmpty() && characters.peek() == '[') {
        //             characters.pop();
        //         }
        //         else if (s.charAt(i) == '}' && !s.isEmpty() && characters.peek() == '{') {
        //             characters.pop();
        //         }
        //         else if (s.charAt(i) == '[' || s.charAt(i) == '{' || s.charAt(i) == '(')
        //             characters.push(s.charAt(i));
        //         else 
        //             return false;
        //     }
        // return characters.isEmpty();

        if (s.length()%2!=0) {
            return false;
        }
        Stack <Character> stack = new Stack <> ();
        for (int i = 0; i<s.length(); i++) {
            if (s.charAt(i) == '}' && !stack.isEmpty() && stack.peek() == '{') {
                stack.pop();
            }
            else if (s.charAt(i) == ')' && !stack.isEmpty() && stack.peek() == '(') {
                stack.pop();
            }
            else if (s.charAt(i) == ']' && !stack.isEmpty() && stack.peek() == '[') {
                stack.pop();
            }
            else {
                stack.push(s.charAt(i));
            }
        }
        return stack.isEmpty();
    }
}